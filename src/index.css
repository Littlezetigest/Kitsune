@import "tailwindcss";
@plugin "@tailwindcss/typography";
@plugin "daisyui" {
  themes:
    cyberpunk;
}

/* Mystical Japanese Kitsune Shrine Aesthetics */
:root {
  --void-black: #0a0a0f;
  --midnight-blue: #1a1a2e;
  --deep-indigo: #16213e;
  --shrine-purple: #2d1b69;
  --fox-fire-blue: #4fc3f7;
  --ethereal-blue: #64b5f6;
  --shrine-orange: #ff6b35;
  --sacred-gold: #ffd700;
  --bamboo-green: #6b8e23;
  --pure-white: #ffffff;
  --scroll-white: #faf9f6;
  --mist-gray: #e8e8e8;
  --spirit-shadow: 0 0 20px rgba(79, 195, 247, 0.4);
  --fox-fire-glow: 0 0 30px rgba(79, 195, 247, 0.6);
  --shrine-glow: 0 0 25px rgba(255, 107, 53, 0.5);
  --golden-glow: 0 0 15px rgba(255, 215, 0, 0.4);
  --mystical-gradient: linear-gradient(135deg, var(--midnight-blue), var(--deep-indigo), var(--shrine-purple));
  --fox-fire-gradient: linear-gradient(45deg, var(--fox-fire-blue), var(--ethereal-blue), var(--shrine-orange), var(--sacred-gold));
}

@layer base {
  body {
    background: var(--mystical-gradient);
    color: var(--scroll-white);
    font-family: 'Noto Serif JP', 'Crimson Text', serif, system-ui;
    position: relative;
    min-height: 100vh;
    line-height: 1.618;
    overflow-x: hidden;
  }
  
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      radial-gradient(circle at 20% 80%, rgba(79, 195, 247, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(255, 107, 53, 0.08) 0%, transparent 50%),
      radial-gradient(circle at 40% 40%, rgba(255, 215, 0, 0.05) 0%, transparent 50%);
    pointer-events: none;
    z-index: -1;
  }
  
  body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      radial-gradient(2px 2px at 20% 30%, rgba(79, 195, 247, 0.3), transparent),
      radial-gradient(2px 2px at 40% 70%, rgba(255, 215, 0, 0.2), transparent),
      radial-gradient(1px 1px at 60% 20%, rgba(255, 107, 53, 0.4), transparent),
      radial-gradient(1px 1px at 80% 80%, rgba(79, 195, 247, 0.3), transparent);
    background-size: 200px 200px, 150px 150px, 100px 100px, 300px 300px;
    animation: foxFireOrb 12s infinite linear;
    pointer-events: none;
    z-index: -2;
  }
  
  .spirit-focus {
    transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  .shrine-presence {
    box-shadow: var(--spirit-shadow);
    transition: all 0.4s ease-in-out;
  }
  
  .shrine-presence:hover {
    box-shadow: var(--fox-fire-glow);
    transform: translateY(-2px);
  }
  
  @keyframes zenBreathe {
    0%, 100% { opacity: 0.9; }
    50% { opacity: 1; }
  }
  
  @keyframes inkDrop {
    0% { opacity: 0; transform: translateY(10px); }
    100% { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes bladeReveal {
    0% { width: 0; }
    100% { width: 100%; }
  }
  
  @keyframes neonPulse {
    0%, 100% { 
      text-shadow: 
        0 0 5px currentColor,
        0 0 10px currentColor,
        0 0 15px currentColor,
        0 0 20px currentColor;
    }
    50% { 
      text-shadow: 
        0 0 10px currentColor,
        0 0 20px currentColor,
        0 0 30px currentColor,
        0 0 40px currentColor;
    }
  }
  
  @keyframes matrixShift {
    0% { 
      background-position: 0% 50%;
      filter: brightness(1);
    }
    25% {
      background-position: 100% 50%;
      filter: brightness(1.2);
    }
    50% {
      background-position: 100% 100%;
      filter: brightness(1.5);
    }
    75% {
      background-position: 0% 100%;
      filter: brightness(1.2);
    }
    100% {
      background-position: 0% 50%;
      filter: brightness(1);
    }
  }
  
  @keyframes foxFireShimmer {
    0% { 
      background-position: 0% 50%;
      filter: brightness(1) hue-rotate(0deg);
    }
    25% {
      background-position: 100% 50%;
      filter: brightness(1.3) hue-rotate(10deg);
    }
    50% {
      background-position: 100% 100%;
      filter: brightness(1.6) hue-rotate(20deg);
    }
    75% {
      background-position: 0% 100%;
      filter: brightness(1.3) hue-rotate(10deg);
    }
    100% {
      background-position: 0% 50%;
      filter: brightness(1) hue-rotate(0deg);
    }
  }
  
  @keyframes foxFireOrb {
    0% {
      transform: translateY(0) translateX(0);
    }
    25% {
      transform: translateY(-25%) translateX(10px);
    }
    50% {
      transform: translateY(-50%) translateX(-5px);
    }
    75% {
      transform: translateY(-75%) translateX(15px);
    }
    100% {
      transform: translateY(-100%) translateX(0);
    }
  }
  
  @keyframes sakuraDrift {
    0% {
      transform: translateY(-10px) rotate(0deg);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      transform: translateY(calc(100vh + 10px)) rotate(360deg);
      opacity: 0;
    }
  }
  
  @keyframes kitsuneWisp {
    0%, 100% {
      transform: translateX(0) scale(1);
      opacity: 0.6;
    }
    50% {
      transform: translateX(10px) scale(1.1);
      opacity: 1;
    }
  }
  
  @keyframes spiritPulse {
    0%, 100% { 
      text-shadow: 
        0 0 5px var(--fox-fire-blue),
        0 0 10px var(--fox-fire-blue),
        0 0 15px var(--fox-fire-blue),
        0 0 20px var(--shrine-orange);
      filter: brightness(1);
    }
    50% { 
      text-shadow: 
        0 0 10px var(--fox-fire-blue),
        0 0 20px var(--ethereal-blue),
        0 0 30px var(--shrine-orange),
        0 0 40px var(--sacred-gold);
      filter: brightness(1.3);
    }
  }
  
  .hologram-text {
    font-weight: 400;
    letter-spacing: 0.1em;
    position: relative;
    background: var(--holographic-gradient);
    background-size: 400% 400%;
    animation: hologramShift 3s ease-in-out infinite;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 0 10px rgba(0, 212, 255, 0.5);
  }
  
  .hologram-text::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, 
      transparent,
      var(--electric-blue),
      var(--hot-pink),
      var(--golden-circuit),
      var(--fox-fire),
      transparent);
    background-size: 200% 100%;
    animation: hologramShift 2s ease-in-out infinite;
    box-shadow: 0 0 10px currentColor;
  }
  
  .fox-fire-glow {
    filter: drop-shadow(0 0 5px var(--fox-fire)) drop-shadow(0 0 10px var(--fox-fire));
    animation: neonPulse 2s ease-in-out infinite;
  }
  
  .geometric-border {
    position: relative;
    clip-path: polygon(10px 0%, 100% 0%, 100% calc(100% - 10px), calc(100% - 10px) 100%, 0% 100%, 0% 10px);
  }
  
  .geometric-border::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: var(--holographic-gradient);
    background-size: 400% 400%;
    animation: hologramShift 3s ease-in-out infinite;
    clip-path: polygon(10px 0%, 100% 0%, 100% calc(100% - 10px), calc(100% - 10px) 100%, 0% 100%, 0% 10px);
    z-index: -1;
  }
  
  .holographic-accent {
    position: relative;
    overflow: hidden;
  }
  
  .holographic-accent::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, 
      transparent 30%, 
      var(--electric-blue) 40%, 
      var(--hot-pink) 50%, 
      var(--sacred-gold) 60%, 
      transparent 70%);
    transition: left 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: -1;
    filter: blur(1px);
  }
  
  .holographic-accent:hover::before {
    left: 100%;
  }
  
  .kitsune-rating {
    background: linear-gradient(90deg, 
      var(--electric-blue),
      var(--hot-pink),
      var(--golden-circuit),
      var(--fox-fire));
    background-size: 200% 100%;
    animation: hologramShift 3s ease-in-out infinite;
    box-shadow: 0 0 10px currentColor;
    border-radius: 2px;
  }
  
  .vulnerability-warning {
    color: var(--hot-pink);
    text-shadow: 
      0 0 5px var(--hot-pink),
      0 0 10px var(--hot-pink);
    animation: neonPulse 2s ease-in-out infinite;
  }
  
  .weapon-button {
    background: linear-gradient(45deg, var(--golden-circuit), var(--fox-fire));
    border: 2px solid var(--golden-circuit);
    color: var(--cyber-black);
    clip-path: polygon(6px 0%, 100% 0%, 100% calc(100% - 6px), calc(100% - 6px) 100%, 0% 100%, 0% 6px);
    box-shadow: 
      0 0 15px var(--golden-circuit),
      inset 0 0 10px rgba(255, 204, 0, 0.3);
    transition: all 0.3s ease;
    font-weight: bold;
    text-shadow: 0 0 5px var(--cyber-black);
  }
  
  .weapon-button:hover {
    background: linear-gradient(45deg, var(--fox-fire), var(--electric-blue));
    border-color: var(--fox-fire);
    box-shadow: 
      0 0 25px var(--fox-fire),
      0 0 35px rgba(0, 255, 170, 0.5),
      inset 0 0 15px rgba(0, 255, 170, 0.3);
    transform: scale(1.1) rotateZ(2deg);
  }
  
  .red-emphasis {
    color: var(--crimson-red);
    font-weight: 500;
    text-shadow: 
      0 0 5px var(--crimson-red),
      0 0 10px var(--crimson-red),
      0 0 20px var(--crimson-red);
    animation: neonPulse 2s ease-in-out infinite;
    position: relative;
  }
  
  .red-emphasis::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, 
      transparent,
      var(--crimson-red),
      var(--fire-red),
      transparent);
    box-shadow: 0 0 10px var(--crimson-red);
    animation: neonPulse 3s ease-in-out infinite;
  }
  
  .circuit-pattern {
    position: relative;
    overflow: hidden;
  }
  
  .circuit-pattern::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      linear-gradient(90deg, transparent 49%, var(--golden-circuit) 50%, transparent 51%),
      linear-gradient(0deg, transparent 49%, var(--golden-circuit) 50%, transparent 51%);
    background-size: 20px 20px;
    opacity: 0.1;
    animation: circuitFlow 4s ease-in-out infinite;
    z-index: -1;
  }
  
  .sakura-glitch {
    position: relative;
    animation: sakuraGlitch 4s infinite;
  }
  
  .sakura-glitch::before {
    content: '🌸';
    position: absolute;
    top: 0;
    left: 0;
    color: var(--hot-pink);
    filter: blur(1px);
    opacity: 0.7;
    animation: sakuraGlitch 4s infinite reverse;
  }
  
  @keyframes matrixRain {
    0% { transform: translateY(-100vh); opacity: 0; }
    10% { opacity: 1; }
    90% { opacity: 1; }
    100% { transform: translateY(100vh); opacity: 0; }
  }
  
  .cyber-card {
    background: linear-gradient(135deg, var(--cyber-black) 0%, var(--shadow-black) 100%);
    border: 2px solid transparent;
    background-clip: padding-box;
    position: relative;
    overflow: hidden;
    clip-path: polygon(15px 0%, 100% 0%, 100% calc(100% - 15px), calc(100% - 15px) 100%, 0% 100%, 0% 15px);
  }
  
  .cyber-card::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: var(--holographic-gradient);
    background-size: 400% 400%;
    animation: hologramShift 4s ease-in-out infinite;
    clip-path: polygon(15px 0%, 100% 0%, 100% calc(100% - 15px), calc(100% - 15px) 100%, 0% 100%, 0% 15px);
    z-index: -1;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .cyber-card::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, 
      transparent,
      var(--electric-blue),
      var(--hot-pink),
      var(--golden-circuit),
      transparent);
    background-size: 200% 100%;
    animation: hologramShift 2s ease-in-out infinite;
    box-shadow: 0 0 10px currentColor;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .cyber-card:hover::before {
    opacity: 1;
  }
  
  .cyber-card:hover::after {
    opacity: 1;
  }
  
  .cyber-card:hover {
    box-shadow: 
      var(--neon-shadow),
      inset 0 0 20px rgba(0, 212, 255, 0.1);
    transform: translateY(-5px) scale(1.02);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .neon-border {
    border: 2px solid transparent;
    background: linear-gradient(var(--shadow-black), var(--shadow-black)) padding-box,
                linear-gradient(45deg, var(--neon-blue), var(--hot-pink), var(--golden-circuit)) border-box;
  }
  
  .dragon-text {
    animation: dragonFlicker 2s ease-in-out infinite;
    background: linear-gradient(45deg, var(--dragon-red), var(--pure-white));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-weight: bold;
  }
  
  .matrix-text {
    animation: matrixFlicker 1.5s ease-in-out infinite;
    color: var(--matrix-green);
    text-shadow: 0 0 10px var(--matrix-green);
    font-weight: bold;
    font-family: 'Courier New', monospace;
  }
  
  .dragon-button {
    background: linear-gradient(45deg, rgba(220, 38, 38, 0.2), rgba(0, 0, 0, 0.8));
    border: 1px solid var(--dragon-red);
    color: var(--pure-white);
    transition: all 0.3s ease;
    border-radius: 8px;
  }
  
  .dragon-button:hover {
    background: linear-gradient(45deg, rgba(220, 38, 38, 0.4), rgba(0, 255, 65, 0.2));
    box-shadow: 0 0 20px var(--dragon-red);
    transform: scale(1.05);
  }
  
  .delete-button {
    background: linear-gradient(45deg, var(--blood-red), var(--shadow-black));
    border: 1px solid var(--dragon-red);
    color: var(--pure-white);
    transition: all 0.3s ease;
  }
  
  .delete-button:hover {
    background: linear-gradient(45deg, var(--dragon-red), var(--blood-red));
    box-shadow: 0 0 15px var(--dragon-red);
    transform: scale(1.02);
  }
  
  .danger-warning {
    color: var(--dragon-red);
    text-shadow: 0 0 10px var(--dragon-red);
    animation: pulseWarning 2s ease-in-out infinite;
  }
  
  @keyframes pulseWarning {
    0%, 100% { opacity: 0.7; }
    50% { opacity: 1; }
  }
  
  .sakura-glitch {
    position: relative;
    animation: glitchSakura 4s infinite;
  }
  
  .dragon-rating {
    background: linear-gradient(90deg, var(--dragon-red), var(--matrix-green), var(--pure-white));
    height: 4px;
    border-radius: 2px;
    box-shadow: 0 0 10px currentColor;
  }
  
  .matrix-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
    opacity: 0.1;
  }
  
  .matrix-char {
    position: absolute;
    color: var(--matrix-green);
    font-family: monospace;
    animation: matrixRain 3s linear infinite;
  }
}

@layer components {
  .cyber-btn {
    @apply px-8 py-4 font-medium transition-all duration-300;
    background: linear-gradient(135deg, var(--cyber-black), var(--shadow-black));
    border: 2px solid var(--electric-blue);
    color: var(--cyber-white);
    position: relative;
    overflow: hidden;
    clip-path: polygon(8px 0%, 100% 0%, 100% calc(100% - 8px), calc(100% - 8px) 100%, 0% 100%, 0% 8px);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    font-family: 'Orbitron', monospace;
    box-shadow: 
      0 0 10px rgba(0, 136, 255, 0.3),
      inset 0 0 10px rgba(0, 212, 255, 0.1);
  }
  
  .cyber-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, 
      var(--electric-blue),
      var(--hot-pink),
      var(--golden-circuit),
      var(--fox-fire));
    background-size: 400% 400%;
    transition: left 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    animation: hologramShift 3s ease-in-out infinite;
    z-index: -1;
  }
  
  .cyber-btn::after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: var(--holographic-gradient);
    background-size: 400% 400%;
    z-index: -2;
    opacity: 0;
    transition: opacity 0.3s ease;
    animation: hologramShift 4s ease-in-out infinite;
    clip-path: polygon(8px 0%, 100% 0%, 100% calc(100% - 8px), calc(100% - 8px) 100%, 0% 100%, 0% 8px);
  }
  
  .cyber-btn:hover::before {
    left: 0;
  }
  
  .cyber-btn:hover::after {
    opacity: 0.7;
  }
  
  .cyber-btn:hover {
    color: var(--cyber-white);
    border-color: var(--hot-pink);
    box-shadow: 
      0 0 20px var(--hot-pink),
      0 0 30px rgba(255, 0, 128, 0.3),
      inset 0 0 20px rgba(0, 212, 255, 0.2);
    transform: translateY(-3px) scale(1.05);
    text-shadow: 0 0 10px var(--hot-pink);
  }
  
  .cyber-archetype-card {
    @apply p-8 transition-all duration-500;
    background: linear-gradient(135deg, var(--cyber-black), var(--shadow-black));
    border: 2px solid transparent;
    position: relative;
    overflow: hidden;
    clip-path: polygon(12px 0%, 100% 0%, 100% calc(100% - 12px), calc(100% - 12px) 100%, 0% 100%, 0% 12px);
    box-shadow: 
      0 0 15px rgba(0, 212, 255, 0.2),
      inset 0 0 15px rgba(0, 136, 255, 0.1);
  }
  
  .cyber-archetype-card::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: var(--holographic-gradient);
    background-size: 400% 400%;
    animation: hologramShift 5s ease-in-out infinite;
    clip-path: polygon(12px 0%, 100% 0%, 100% calc(100% - 12px), calc(100% - 12px) 100%, 0% 100%, 0% 12px);
    opacity: 0;
    transition: opacity 0.4s ease;
    z-index: -1;
  }
  
  .cyber-archetype-card::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 3px;
    background: linear-gradient(90deg, 
      var(--electric-blue),
      var(--hot-pink),
      var(--golden-circuit),
      var(--fox-fire));
    background-size: 300% 100%;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateX(-50%);
    box-shadow: 0 0 15px currentColor;
    animation: hologramShift 3s ease-in-out infinite;
  }
  
  .cyber-archetype-card:hover::before {
    opacity: 1;
  }
  
  .cyber-archetype-card:hover::after {
    width: 90%;
  }
  
  .cyber-archetype-card:hover {
    transform: translateY(-5px) rotateX(5deg);
    box-shadow: 
      var(--neon-shadow),
      0 10px 30px rgba(0, 212, 255, 0.3),
      inset 0 0 30px rgba(0, 255, 170, 0.1);
  }
  
  .cyber-archetype-card > * {
    position: relative;
    z-index: 1;
  }
  
  .cyber-nav {
    background: linear-gradient(135deg, var(--cyber-black), var(--shadow-black));
    border-bottom: 2px solid var(--electric-blue);
    backdrop-filter: blur(20px);
    position: relative;
    box-shadow: 
      0 0 20px rgba(0, 212, 255, 0.3),
      inset 0 -2px 10px rgba(0, 136, 255, 0.2);
  }
  
  .cyber-nav::before {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, 
      transparent 0%, 
      var(--electric-blue) 20%, 
      var(--hot-pink) 40%, 
      var(--golden-circuit) 60%, 
      var(--fox-fire) 80%, 
      transparent 100%);
    background-size: 200% 100%;
    animation: hologramShift 3s ease-in-out infinite;
    box-shadow: 0 0 10px currentColor;
  }
  
  .cyber-nav::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--holographic-gradient);
    background-size: 400% 400%;
    animation: hologramShift 6s ease-in-out infinite;
    opacity: 0.05;
    z-index: -1;
  }
  
  .neon-divider {
    height: 2px;
    background: linear-gradient(90deg, 
      transparent,
      var(--electric-blue),
      var(--hot-pink),
      var(--golden-circuit),
      var(--fox-fire),
      var(--hot-pink),
      var(--electric-blue),
      transparent);
    background-size: 200% 100%;
    animation: hologramShift 2s ease-in-out infinite;
    box-shadow: 
      0 0 10px currentColor,
      0 2px 15px rgba(0, 212, 255, 0.3);
    position: relative;
  }
  
  .neon-divider::after {
    content: '';
    position: absolute;
    top: -1px;
    left: 0;
    right: 0;
    height: 4px;
    background: inherit;
    filter: blur(2px);
    opacity: 0.5;
    z-index: -1;
  }
  
  .glitch-text {
    position: relative;
    display: inline-block;
    color: var(--cyber-white);
    text-shadow: 
      0 0 5px var(--electric-blue),
      0 0 10px var(--hot-pink);
  }
  
  .glitch-text::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    color: var(--hot-pink);
    z-index: -1;
    animation: sakuraGlitch 0.3s infinite;
  }
  
  .glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    color: var(--electric-blue);
    z-index: -2;
    animation: sakuraGlitch 0.3s infinite reverse;
  }
  
  .circuit-text {
    position: relative;
    color: var(--golden-circuit);
    text-shadow: 0 0 10px var(--golden-circuit);
    font-family: 'Orbitron', monospace;
  }
  
  .circuit-text::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 1px;
    background: var(--golden-circuit);
    box-shadow: 0 0 5px var(--golden-circuit);
    animation: circuitFlow 2s ease-in-out infinite;
  }
}
